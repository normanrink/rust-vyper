module = _{ SOI ~ module_stmt* ~ EOI }

module_stmt = _{ (import | event_decl) ~ NEWLINE+ }

// Imports
import = _{ simp_import | from_import }

simp_import = { "import" ~ module_path ~ as_alias? }
from_import = { "from" ~ module_path ~ "import" ~ (symbol_as_alias | import_list) }
import_list = {
    "(" ~ NEWLINE*
    ~ symbol_as_alias
    ~ ("," ~ NEWLINE* ~ symbol_as_alias)*
    ~ ","? ~ NEWLINE*
    ~ ")"
}

module_path = { (".." | ".")? ~ symbol ~ ("." ~ symbol)* }

// Events
event_decl = ${
    "event" ~ w ~ symbol ~ w ~ ":" ~ w ~ c ~ NEWLINE ~
        PUSH(indent) ~ event_prop ~ w ~
        (NEWLINE ~ PEEK_ALL ~ event_prop ~ w)* ~
        DROP
}
event_prop = ${
    symbol ~ w ~ ":" ~ w ~ symbol
}

// Generic
symbol_as_alias = { symbol ~ as_alias? }
as_alias = { "as" ~ symbol }

// Symbols
symbol = @{ sym_non_numeric ~ sym_numeric* }

sym_non_numeric = @{ "_" | ASCII_ALPHA }
sym_numeric = @{ "_" | ASCII_ALPHA | ASCII_DIGIT }

indent = _{ (" " | "\t")+ }

w = _{ WHITESPACE* }
c = _{ comment? }
comment = { "#" ~ (!NEWLINE ~ ANY)* }
WHITESPACE = _{ " " | "\t" }
